@import './variables.scss';

.ng-valid.ng-dirty:not([formGroupName]):not([formGroup]):not([formArrayName]):not([formArray]):not(form):not([ngModelGroup]):not(app-persons):not(.fields) {
  border: 1px solid $ok-color;
  border-radius: 4px;
}

.ng-invalid.ng-touched:not([formGroupName]):not([formGroup]):not([formArrayName]):not([formArray]):not(form):not([ngModelGroup]):not(app-persons):not(.fields),
.ng-invalid.ng-dirty:not([formGroupName]):not([formGroup]):not([formArrayName]):not([formArray]):not(form):not([ngModelGroup]):not(app-persons):not(.fields) {
  border: 1px solid $error-color;
  border-radius: 4px;
}

form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

input {
  width: 100%;
  height: 2rem;
  padding: 0 0.5rem;
  font-size: $font-size-small;
}

label {
  font-size: $font-size-small;
  font-weight: bold;
}

fieldset {
  border: 1px solid $border-color;
  border-radius: $border-radius;
  outline: none;
  margin: 0;
  padding: $padding;
  display: flex;
  flex-flow: column;
  gap: $padding;

  legend {
    font-weight: bold;
  }

  .fields {
    flex-grow: 9;
    display: flex;
    flex-flow: column;

    .content {
      display: flex;
      flex-flow: row;
      .content:not(:last-child) {
        margin-bottom: $margin;
      }
      .list {
        display: flex;
        flex-flow: column;
        flex-grow: 6;
        gap: $padding;
      }
      .field-actions {
        flex-grow: 1;
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
  }
}
